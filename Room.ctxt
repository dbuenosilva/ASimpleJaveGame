#BlueJ class context
comment0.target=Room
comment1.params=description\ inside
comment1.target=Room(java.lang.String,\ boolean)
comment1.text=\ \n\ Constructor\ creates\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "the\ Reception"\ or\n\ "Outside\ of\ the\ building".\n\ @param\ description\ The\ room's\ description.\n
comment10.params=
comment10.target=java.util.ArrayList\ getItemsInTheRoom()
comment10.text=\ \n\ Return\ a\ list\ of\ items\ in\ the\ room.\n\ @return\ A\ list\ of\ the\ available\ items\ in\ the\ room.\ \n
comment11.params=
comment11.target=java.lang.String\ getItemsString()
comment11.text=\ \n\ Return\ a\ String\ listing\ the\ items\ in\ the\ room.,\n\ For\ example,\ if\ the\ room\ has\ items\ like\ mask\ and\ gloves,\ this\ method\ \n\ should\ return\ a\ String\ containing\:\ "mask\ gloves"\n\ @return\ A\ description\ of\ the\ available\ items.\ \n
comment12.params=newItem
comment12.target=void\ addCompulsoryItemsWithThePlayer(Item)
comment12.text=\ \n\ To\ add\ a\ new\ Compulsory\ PPE\ to\ be\ used\ when\ gettin\ in\ this\ room\n\ @param\ description\ A\ compulsory\ Personal\ Protective\ Equipment\ to\ be\ used\ when\ gettin\ in\ this\ room\n
comment13.params=
comment13.target=java.util.ArrayList\ getListOfCompulsoryItemsWithThePlayer()
comment13.text=\ \n\ Return\ a\ list\ of\ Compulsory\ Personal\ Protective\ Equipment\ to\ access\ the\ room.\n@return\ A\ list\ of\ Compulsory\ Personal\ Protective\ Equipment\ necessary\ to\ access\ this\ room\ safely.
comment14.params=
comment14.target=java.lang.String\ getStringOfCompulsoryItemsWithThePlayer()
comment14.text=\ \n\ Return\ a\ String\ listing\ the\ items\ compusory\ the\ get\ in\ the\ room.\n\ For\ example,\ if\ the\ room\ obligates\ the\ play\ to\ take\ mask\ \n\ and\ gloves,\ this\ method\ should\ return\ a\ String\ containing\:\ \n\ "mask"\ "gloves"\n\ @return\ A\ description\ of\ the\ items\ inside\ another\ item.\ \n
comment15.params=player
comment15.target=boolean\ evaluateIfPlayerCanGetInTheRoom(Player)
comment15.text=\ \n\ Return\ a\ TRUE\ if\ the\ player\ can\ get\ in\ the\ room.\n\ For\ example,\ if\ the\ room\ obligates\ the\ play\ to\ take\ mask\ \n\ and\ gloves,\ this\ method\ checks\ if\ the\ player\ has\ taken\ mask\ \n\ and\ gloves\ before\ getting\ the\ room.\n\ @return\ True\ if\ the\ player\ can\ access\ the\ room,\ false\ otherwise.\ \n
comment16.params=nameOfitemToCheck
comment16.target=Item\ evaluateItemInTheRoom(java.lang.String)
comment16.text=\ \n\ Evaluate\ if\ the\ item\ is\ in\ the\ room.\n\ @param\ nameOfitemToCheck\ A\ String\ name\ of\ item\ to\ be\ checked\ if\ it\ is\ in\ the\ room\n\ @return\ The\ object\ Item\ if\ its\ is\ in\ the\ room.\ Null\ if\ the\ item\ is\ not\ in\ the\ room.\n
comment17.params=
comment17.target=boolean\ isInsideOfTheBuilding()
comment17.text=\ \n\ @return\ True\ if\ the\ room\ is\ inside\ of\ the\ building.\n
comment18.params=inside
comment18.target=void\ setInside(boolean)
comment18.text=\ \n\ Setting\ if\ the\ room\ is\ inside\ of\ the\ building\ or\ not.\n\ @param\ description\ True\ if\ the\ room\ is\ inside,\ otherwise\ false.\n
comment2.params=
comment2.target=java.lang.String\ getDescription()
comment2.text=\ \n\ @return\ The\ description\ of\ the\ room.\n
comment3.params=description
comment3.target=void\ setDescription(java.lang.String)
comment3.text=\ \n\ Setting\ a\ new\ descrition\ to\ the\ room\n\ @param\ description\ The\ new\ room's\ description.\n
comment4.params=direction
comment4.target=Room\ getExit(java.lang.String)
comment4.text=\ \n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ \n\ room\ in\ direction\ "direction\ "\ \n\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n
comment5.params=direction\ neighbor
comment5.target=void\ setExit(java.lang.String,\ Room)
comment5.text=\ \n\ Setting\ a\ possible\ exit\ to\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ The\ room\ in\ the\ given\ direction.\ \n
comment6.params=
comment6.target=java.lang.String\ getExitString()
comment6.text=\ \n\ Return\ a\ String\ listing\ the\ exits\ from\ the\ room.,\n\ For\ example,\ if\ the\ room\ has\ exits\ to\ the\ north\ and\ west,\ this\ method\ \n\ should\ return\ a\ String\ containing\:\ "north\ west"\n\ @return\ A\ description\ of\ the\ available\ exits.\ \n
comment7.params=
comment7.target=java.lang.String\ getLongDescription()
comment7.text=\ \n\ Returns\ a\ String\ containing\ the\ description\ of\ the\ current\ room\ \n\ and\ a\ list\ of\ the\ exits\ of\ a\ room,\ of\ the\ form\:\n\ \ \ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ \ \ Exits\:\ north\ west\n\ @return\ A\ description\ of\ the\ room,\ including\ exits.\ \n
comment8.params=newItem
comment8.target=boolean\ addItemInTheRoom(Item)
comment8.text=\ \n\ To\ add\ a\ new\ item\ in\ this\ room\n\ @param\ newItem\ A\ item\ to\ be\ addd\ in\ the\ room\n\ @return\ TRUE\ if\ the\ item\ was\ added.\ FALSE\ if\ the\ item\ was\ not\ added.\ \ \ \ \n
comment9.params=newItem
comment9.target=boolean\ removeItemFromTheRoom(Item)
comment9.text=\ \n\ Remove\ a\ item\ from\ the\ room.\n\ @param\ newItem\ A\ item\ to\ be\ removed\ from\ the\ room\n\ @return\ TRUE\ if\ the\ item\ was\ removed.\ FALSE\ if\ the\ item\ was\ not\ removed.\n
numComments=19
